worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    server {
        # Redireciona todo o tráfego HTTP para HTTPS
        listen 80;
        server_name pinchat.duckdns.org;

        if ($host = pinchat.duckdns.org) {
            return 301 https://$host$request_uri;
        } # managed by Certbot
    }

    server {
        listen 443 ssl;
        server_name celestialchat.duckdns.org;
        ssl_certificate /etc/letsencrypt/live/pinchat.duckdns.org/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/pinchat.duckdns.org/privkey.pem; # managed by Certbot

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'HIGH:!aNULL:!MD5';
        ssl_prefer_server_ciphers on;

        # Redireciona para a aplicação na porta 3000
        location / {
            proxy_pass http://localhost:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Redireciona para a aplicação na porta 5000
        location /app5000/ {
            rewrite ^/app5000/(.*) /$1 break;
            proxy_pass http://localhost:5000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Configuração para WebSockets do Socket.IO na porta 8000
        location /socket.io/ {
            proxy_pass http://localhost:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }
    }
}
